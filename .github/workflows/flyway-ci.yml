name: flyway 스크립트 검증

on:
  pull_request:
    paths:
      - 'src/main/resources/db/migration/**.sql'
    types: [opened, reopened, synchronize]

permissions: write-all
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: testdb
          MYSQL_USER: test
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Settings Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Chmod Gradle
        run: chmod +x gradlew

      - name: Wait for MySQL to be ready
        run: |
          while [ -z "$DATABASE_URL" ]; do
            echo "Waiting for MySQL to be ready..."
            export DATABASE_URL=$(echo "SELECT 'ready';" | mysql -h127.0.0.1 -P3306 -utest -ppassword testdb --skip-column-names 2>/dev/null)
            sleep 1
          done

      - name: Create flyway.conf
        run: |
          touch flyway.conf
          echo "flyway.driver=com.mysql.cj.jdbc.Driver" >> flyway.conf
          echo "flyway.url=jdbc:mysql://127.0.0.1:3306/testdb" >> flyway.conf
          echo "flyway.user=test" >> flyway.conf
          echo "flyway.password=password" >> flyway.conf
          echo "flyway.encoding=UTF-8" >> flyway.conf
          echo "flyway.locations=filesystem:src/main/resources/db/migration" >> flyway.conf
          echo "flyway.validateOnMigrate=true" >> flyway.conf

      - name: flywayValidate
        run: |
          ./gradlew -Dflyway.configFiles=flyway.conf flywayMigrate --stacktrace
